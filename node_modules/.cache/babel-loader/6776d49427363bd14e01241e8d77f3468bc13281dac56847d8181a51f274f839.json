{"ast":null,"code":"var _jsxFileName = \"/Users/suhaibkhan/Desktop/nwss/src/context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useReducer } from 'react';\nimport { SET_LOADING, SET_STORIES, REMOVE_STORY, HANDLE_PAGE, HANDLE_SEARCH } from './actions';\nimport reducer from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?';\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: 'react',\n  page: 0,\n  nbPages: 0\n};\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchStories = async url => {\n    dispatch({\n      type: SET_LOADING\n    });\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      dispatch({\n        type: SET_STORIES,\n        payload: {\n          hits: data.hits,\n          nbPages: data.nbPages\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const removeStory = id => {\n    dispatch({\n      type: REMOVE_STORY,\n      payload: id\n    });\n  };\n  const handleSearch = query => {\n    dispatch({\n      type: HANDLE_SEARCH,\n      payload: query\n    });\n  };\n  const handlePage = value => {\n    dispatch({\n      type: HANDLE_PAGE,\n      payload: value\n    });\n  };\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`);\n  }, [state.query, state.page]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      removeStory,\n      handleSearch,\n      handlePage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n// make sure use\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","SET_LOADING","SET_STORIES","REMOVE_STORY","HANDLE_PAGE","HANDLE_SEARCH","reducer","API_ENDPOINT","initialState","isLoading","hits","query","page","nbPages","AppContext","createContext","AppProvider","children","state","dispatch","fetchStories","url","type","response","fetch","data","json","payload","error","console","log","removeStory","id","handleSearch","handlePage","value","useGlobalContext"],"sources":["/Users/suhaibkhan/Desktop/nwss/src/context.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer } from 'react'\n\nimport {\n  SET_LOADING,\n  SET_STORIES,\n  REMOVE_STORY,\n  HANDLE_PAGE,\n  HANDLE_SEARCH,\n} from './actions'\nimport reducer from './reducer'\n\nconst API_ENDPOINT = 'https://hn.algolia.com/api/v1/search?'\n\nconst initialState = {\n  isLoading: true,\n  hits: [],\n  query: 'react',\n  page: 0,\n  nbPages: 0,\n}\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const fetchStories = async (url) => {\n    dispatch({ type: SET_LOADING })\n    try {\n      const response = await fetch(url)\n      const data = await response.json()\n      dispatch({\n        type: SET_STORIES,\n        payload: { hits: data.hits, nbPages: data.nbPages },\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const removeStory = (id) => {\n    dispatch({ type: REMOVE_STORY, payload: id })\n  }\n  const handleSearch = (query) => {\n    dispatch({ type: HANDLE_SEARCH, payload: query })\n  }\n  const handlePage = (value) => {\n    dispatch({ type: HANDLE_PAGE, payload: value })\n  }\n  useEffect(() => {\n    fetchStories(`${API_ENDPOINT}query=${state.query}&page=${state.page}`)\n  }, [state.query, state.page])\n\n  return (\n    <AppContext.Provider\n      value={{ ...state, removeStory, handleSearch, handlePage }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAEhE,SACEC,WAAW,EACXC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,aAAa,QACR,WAAW;AAClB,OAAOC,OAAO,MAAM,WAAW;AAAA;AAE/B,MAAMC,YAAY,GAAG,uCAAuC;AAE5D,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,IAAI;EACfC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,CAAC;EACPC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,UAAU,gBAAGjB,KAAK,CAACkB,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,UAAU,CAACM,OAAO,EAAEE,YAAY,CAAC;EAE3D,MAAMY,YAAY,GAAG,MAAOC,GAAG,IAAK;IAClCF,QAAQ,CAAC;MAAEG,IAAI,EAAErB;IAAY,CAAC,CAAC;IAC/B,IAAI;MACF,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;MACjC,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCP,QAAQ,CAAC;QACPG,IAAI,EAAEpB,WAAW;QACjByB,OAAO,EAAE;UAAEjB,IAAI,EAAEe,IAAI,CAACf,IAAI;UAAEG,OAAO,EAAEY,IAAI,CAACZ;QAAQ;MACpD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,WAAW,GAAIC,EAAE,IAAK;IAC1Bb,QAAQ,CAAC;MAAEG,IAAI,EAAEnB,YAAY;MAAEwB,OAAO,EAAEK;IAAG,CAAC,CAAC;EAC/C,CAAC;EACD,MAAMC,YAAY,GAAItB,KAAK,IAAK;IAC9BQ,QAAQ,CAAC;MAAEG,IAAI,EAAEjB,aAAa;MAAEsB,OAAO,EAAEhB;IAAM,CAAC,CAAC;EACnD,CAAC;EACD,MAAMuB,UAAU,GAAIC,KAAK,IAAK;IAC5BhB,QAAQ,CAAC;MAAEG,IAAI,EAAElB,WAAW;MAAEuB,OAAO,EAAEQ;IAAM,CAAC,CAAC;EACjD,CAAC;EACDpC,SAAS,CAAC,MAAM;IACdqB,YAAY,CAAE,GAAEb,YAAa,SAAQW,KAAK,CAACP,KAAM,SAAQO,KAAK,CAACN,IAAK,EAAC,CAAC;EACxE,CAAC,EAAE,CAACM,KAAK,CAACP,KAAK,EAAEO,KAAK,CAACN,IAAI,CAAC,CAAC;EAE7B,oBACE,QAAC,UAAU,CAAC,QAAQ;IAClB,KAAK,EAAE;MAAE,GAAGM,KAAK;MAAEa,WAAW;MAAEE,YAAY;MAAEC;IAAW,CAAE;IAAA,UAE1DjB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AACD;AAAA,GAtCMD,WAAW;AAAA,KAAXA,WAAW;AAuCjB,OAAO,MAAMoB,gBAAgB,GAAG,MAAM;EAAA;EACpC,OAAOtC,UAAU,CAACgB,UAAU,CAAC;AAC/B,CAAC;AAAA,IAFYsB,gBAAgB;AAI7B,SAAStB,UAAU,EAAEE,WAAW;AAAE;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}